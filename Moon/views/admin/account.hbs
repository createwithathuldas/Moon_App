{{! admin-account.hbs }}
<section class="admin-dashboard">
  <div class="dashboard-header">
    <h2><i class="fas fa-user-shield"></i> Admin Dashboard</h2>
    <p>Welcome back, {{adminData.username}} ({{admin.role}})</p>
  </div>

  <div class="dashboard-grid">
    {{! Admin Profile Section }}
    <div class="admin-card profile-card">
      <div class="card-header">
        <h3><i class="fas fa-id-card"></i> Your Profile</h3>
      </div>
      <div class="card-body">
        <div class="profile-detail">
          <span class="detail-label">Username:</span>
          <span class="detail-value">{{adminData.username}}</span>
        </div>
        <div class="profile-detail">
          <span class="detail-label">Email:</span>
          <span class="detail-value">{{adminData.email}}</span>
        </div>
        <div class="profile-detail">
          <span class="detail-label">Account Created:</span>
          <span class="detail-value">{{formatDate adminData.createdAt}}</span>
        </div>
        <div class="profile-detail">
          <span class="detail-label">Last Updated:</span>
          <span class="detail-value">{{formatDate adminData.updatedAt}}</span>
        </div>
        <div class="profile-actions">
          <button class="btn-edit" onclick="toggleEditForm()">
            <i class="fas fa-edit"></i> Edit Profile
          </button>
          <a href="/admin/change-password" class="btn-change-password">
            <i class="fas fa-key"></i> Change Password
          </a>
          <a href="/admin/logout" class="btn-change-password">
            <i class="fas fa-sign-out"></i> logout
          </a>
        </div>
      </div>
    </div>

    {{! Add New Admin Section }}
    <div class="admin-card new-admin-card">
      <div class="card-header">
        <h3><i class="fas fa-user-plus"></i> Create New Admin</h3>
      </div>
      <div class="card-body">
        <form id="newAdminForm" action="/admin/create-admin" method="POST">

{{#if error_msg}}
  <div class="alert alert-danger">{{error_msg }}</div>
{{/if}}
{{#if success_msg}}
  <div class="alert alert-success">{{success_msg}}</div>
{{/if}}
{{#if error_msg}}
  <script>alert({{error_msg }});</script>
{{/if}}
{{#if success_msg}}
  <div class="alert alert-success">{{success_msg}}</div>
{{/if}}


          <div class="form-group">
            <label for="username"><i class="fas fa-user"></i> Username</label>
            <input type="text" id="username" name="username" required>
          </div>
          <div class="form-group">
            <label for="email"><i class="fas fa-envelope"></i> Email</label>
            <input type="email" id="email" name="email" required>
          </div>
          <div class="form-group">
            <label for="password"><i class="fas fa-lock"></i> Password</label>
            <input type="password" id="password" name="password" required minlength="8">
            <div class="password-strength">
              <span class="strength-meter"></span>
              <span class="strength-text"></span>
            </div>
          </div>
          <div class="form-group">
            <label for="confirmPassword"><i class="fas fa-lock"></i> Confirm Password</label>
            <input type="password" id="confirmPassword" name="confirmPassword" required>
          </div>
          <button type="submit" class="btn-submit">
            <i class="fas fa-save"></i> Create Admin
          </button>
        </form>
      </div>
    </div>

    {{! Existing Admins Section }}
    <div class="admin-card admins-list-card">
      <div class="card-header">
        <h3><i class="fas fa-users-cog"></i> System Admins</h3>
      </div>
      <div class="card-body">
        <div class="admins-list">
          {{#each admins}}
            <div class="admin-item">
              <div class="admin-info">
                <span class="admin-username">{{this.username}}</span>
                <span class="admin-email">{{this.email}}</span>
                <span class="admin-role">{{this.role}}</span>
                <span class="admin-date">Joined {{formatDate this.createdAt}}</span>
              </div>
              {{#unless (eq this._id ../admin._id)}}
                <button class="btn-delete" onclick="confirmDeleteAdmin('{{this._id}}')">
                  <i class="fas fa-trash-alt"></i>
                </button>
              {{/unless}}
            </div>
          {{/each}}
        </div>
      </div>
    </div>
  </div>
</section>

{{! Edit Profile Modal (hidden by default) }}
<div id="editProfileModal" class="modal">
  <div class="modal-content">
    <span class="close-btn" onclick="toggleEditForm()">&times;</span>
    <h3><i class="fas fa-user-edit"></i> Edit Profile</h3>
    <form id="editProfileForm" action="/admin/update-profile" method="POST">
      <div class="form-group">
        <label for="editUsername">Username</label>
        <input type="text" id="editUsername" name="username" value="{{adminData.username}}" required>
      </div>
      <div class="form-group">
        <label for="editEmail">Email</label>
        <input type="email" id="editEmail" name="email" value="{{adminData.email}}" required>
      </div>
      <button type="submit" class="btn-submit">
        <i class="fas fa-save"></i> Save Changes
      </button>
    </form>
  </div>
</div>

{{! Delete Confirmation Modal }}
<div id="deleteConfirmModal" class="modal">
  <div class="modal-content confirm-modal">
    <h3>Confirm Deletion</h3>
    <p>Are you sure you want to delete this admin account?</p>
    <div class="modal-actions">
      <button class="btn-cancel" onclick="closeDeleteModal()">Cancel</button>
      <button class="btn-confirm" id="confirmDeleteBtn">Delete</button>
    </div>
  </div>
</div>

<style>
  /* Base Styles */
  .admin-dashboard {
    max-width: 1200px;
    margin: 2rem auto;
    padding: 2rem;
    background: #f8f9fa;
    border-radius: 10px;
    box-shadow: 0 2px 15px rgba(0, 0, 0, 0.1);
  }

  .dashboard-header {
    margin-bottom: 2rem;
    padding-bottom: 1rem;
    border-bottom: 1px solid #dee2e6;
  }

  .dashboard-header h2 {
    color: #343a40;
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .dashboard-header p {
    color: #6c757d;
  }

  .dashboard-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
    gap: 2rem;
  }

  /* Card Styles */
  .admin-card {
    background: white;
    border-radius: 8px;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    overflow: hidden;
  }

  .card-header {
    padding: 1rem 1.5rem;
    background: #495057;
    color: white;
  }

  .card-header h3 {
    margin: 0;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 1.1rem;
  }

  .card-body {
    padding: 1.5rem;
  }

  /* Profile Section */
  .profile-detail {
    display: flex;
    margin-bottom: 1rem;
    padding-bottom: 1rem;
    border-bottom: 1px solid #eee;
  }

  .detail-label {
    font-weight: 600;
    width: 150px;
    color: #495057;
  }

  .detail-value {
    color: #212529;
  }

  .profile-actions {
    display: flex;
    gap: 1rem;
    margin-top: 1.5rem;
  }

  /* Button Styles */
  .btn-edit, .btn-change-password, .btn-submit {
    padding: 0.6rem 1rem;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-weight: 500;
    transition: all 0.2s;
  }

  .btn-edit {
    background: #4dabf7;
    color: white;
  }

  .btn-edit:hover {
    background: #339af0;
  }

  .btn-change-password {
    background: #f8f9fa;
    color: #495057;
    text-decoration: none;
    border: 1px solid #dee2e6;
  }

  .btn-change-password:hover {
    background: #e9ecef;
  }

  .btn-submit {
    background: #40c057;
    color: white;
  }

  .btn-submit:hover {
    background: #37b24d;
  }

  /* Form Styles */
  .form-group {
    margin-bottom: 1.2rem;
  }

  .form-group label {
    display: block;
    margin-bottom: 0.5rem;
    font-weight: 500;
    color: #495057;
  }

  .form-group input {
    width: 100%;
    padding: 0.6rem;
    border: 1px solid #ced4da;
    border-radius: 4px;
    font-size: 1rem;
  }

  .form-group input:focus {
    outline: none;
    border-color: #4dabf7;
    box-shadow: 0 0 0 2px rgba(77, 171, 247, 0.2);
  }

  /* Password Strength Meter */
  .password-strength {
    margin-top: 0.5rem;
    display: flex;
    align-items: center;
  }

  .strength-meter {
    height: 5px;
    width: 100px;
    background: #e9ecef;
    border-radius: 3px;
    overflow: hidden;
  }

  .strength-meter::after {
    content: '';
    display: block;
    height: 100%;
    width: 0;
    background: #e9ecef;
    transition: width 0.3s, background 0.3s;
  }

  .strength-text {
    font-size: 0.8rem;
    margin-left: 0.5rem;
    color: #868e96;
  }

  /* Admins List */
  .admins-list {
    max-height: 400px;
    overflow-y: auto;
  }

  .admin-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0.8rem 0;
    border-bottom: 1px solid #eee;
  }

  .admin-info {
    display: flex;
    flex-direction: column;
  }

  .admin-username {
    font-weight: 600;
    color: #212529;
  }

  .admin-email {
    font-size: 0.9rem;
    color: #495057;
  }

  .admin-role {
    font-size: 0.8rem;
    color: #868e96;
    text-transform: capitalize;
  }

  .admin-date {
    font-size: 0.8rem;
    color: #adb5bd;
  }

  .btn-delete {
    background: #fa5252;
    color: white;
    border: none;
    width: 30px;
    height: 30px;
    border-radius: 50%;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: background 0.2s;
  }

  .btn-delete:hover {
    background: #e03131;
  }

  /* Modal Styles */
  .modal {
    display: none;
    position: fixed;
    z-index: 100;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
  }

  .modal-content {
    background: white;
    margin: 10% auto;
    padding: 2rem;
    border-radius: 8px;
    width: 90%;
    max-width: 500px;
    position: relative;
  }

  .confirm-modal {
    text-align: center;
  }

  .close-btn {
    position: absolute;
    right: 1.5rem;
    top: 1rem;
    font-size: 1.5rem;
    cursor: pointer;
    color: #868e96;
  }

  .modal-actions {
    display: flex;
    justify-content: center;
    gap: 1rem;
    margin-top: 1.5rem;
  }

  .btn-cancel, .btn-confirm {
    padding: 0.6rem 1.5rem;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-weight: 500;
  }

  .btn-cancel {
    background: #f1f3f5;
    color: #495057;
  }

  .btn-confirm {
    background: #fa5252;
    color: white;
  }

  @media (max-width: 768px) {
    .dashboard-grid {
      grid-template-columns: 1fr;
    }
    
    .profile-actions {
      flex-direction: column;
    }
  }
</style>

<script>
  // Password Strength Indicator
  document.getElementById('password').addEventListener('input', function(e) {
    const password = e.target.value;
    const strength = checkPasswordStrength(password);
    updateStrengthIndicator(strength);
  });

  function checkPasswordStrength(password) {
    let strength = 0;
    
    // Length check
    if (password.length >= 8) strength++;
    if (password.length >= 12) strength++;
    
    // Character variety checks
    if (/[A-Z]/.test(password)) strength++;
    if (/[a-z]/.test(password)) strength++;
    if (/[0-9]/.test(password)) strength++;
    if (/[^A-Za-z0-9]/.test(password)) strength++;
    
    return Math.min(strength, 5);
  }

  function updateStrengthIndicator(strength) {
    const meter = document.querySelector('.strength-meter');
    const text = document.querySelector('.strength-text');
    const colors = ['#ff6b6b', '#ff922b', '#fcc419', '#51cf66', '#2b8a3e'];
    const labels = ['Very Weak', 'Weak', 'Moderate', 'Strong', 'Very Strong'];
    
    meter.style.width = (strength * 20) + '%';
    meter.style.backgroundColor = colors[strength - 1] || '#e9ecef';
    text.textContent = strength > 0 ? labels[strength - 1] : '';
    text.style.color = colors[strength - 1] || '#868e96';
  }

  // Edit Profile Modal
  function toggleEditForm() {
    const modal = document.getElementById('editProfileModal');
    modal.style.display = modal.style.display === 'block' ? 'none' : 'block';
  }

  // Admin Deletion
  let adminToDelete = null;

  function confirmDeleteAdmin(adminId) {
    adminToDelete = adminId;
    document.getElementById('deleteConfirmModal').style.display = 'block';
  }

  function closeDeleteModal() {
    adminToDelete = null;
    document.getElementById('deleteConfirmModal').style.display = 'none';
  }






  // Get the delete button
const deleteBtn = document.getElementById('confirmDeleteBtn');

if (deleteBtn) {
  deleteBtn.addEventListener('click', async () => {
    try {
      const response = await fetch(`/admin/delete-admin/${adminToDelete}`, {
        method: 'DELETE'
      });
      
      const result = await response.json();
      
      if (result.success) {
        alert('Admin deleted successfully');
        window.location.reload();
      } else {
        alert(result.message || 'Failed to delete admin');
      }
    } catch (error) {
      console.error('Error:', error);
      alert('Something went wrong');
    } finally {
      // Close modal if this function exists
      if (typeof closeDeleteModal === 'function') {
        closeDeleteModal();
      }
    }
  });
}

document.getElementById('newAdminForm').addEventListener('submit', async (e) => {
  e.preventDefault(); // Prevent default form submission

  const formData = new FormData(e.target);

  try {
    const response = await fetch('/admin/create-admin', {
      method: 'POST',
      body: formData,
    });

    const data = await response.json();
    // Handle the response (e.g., show success or error messages)
  } catch (error) {
    console.error('Error submitting form:', error);
  }
});




  // Close modals when clicking outside
  window.addEventListener('click', function(event) {
    if (event.target.className === 'modal') {
      event.target.style.display = 'none';
    }
  });
</script>